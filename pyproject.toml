[build-system]
requires = ["scikit-build-core>=0.10", "pybind11"]
build-backend = "scikit_build_core.build"

[project]
name = "rlopt"
version = "2025.3.0"
description = "Reinforcement Learning Optimization"
readme = "README.md"
authors = [{ name = "Feiyang Wu", email = "feiyangwu@gatech.edu" }]
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "cmake",
    "numpy",
    "torch",
    "pyyaml",
    "torchrl>=0.9.0",
    "hydra-core",
    "torchrl",
    "wandb",
    "stable-baselines3>=2.6",
    "gymnasium >= 1.1.0",
    "sb3-contrib",
    "tqdm",
    "ruff",
    "pyrefly",
]

[project.optional-dependencies]
test = ["pytest"]

[tool.scikit-build-core]
generator = "Unix Makefiles"


[tool.scikit-build]
logging.level = "INFO"

[tool.scikit-build.wheel.packages]
rlopt = "rlopt"

[tool.cibuildwheel]
build-frontend = "build[uv]"
test-command = "pytest {project}/tests"
test-extras = ["test"]

[tool.cibuildwheel.pyodide]
build-frontend = { name = "build", args = ["--exports", "whole_archive"] }


[tool.pytest.ini_options]
minversion = "6.2"
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
xfail_strict = true
filterwarnings = [
    "error",
    "ignore:(ast.Str|Attribute s|ast.NameConstant|ast.Num) is deprecated:DeprecationWarning:_pytest",
]
testpaths = ["tests"]


[tool.ruff]
target-version = "py312"

[tool.ruff.lint]
extend-select = [
    "B",   # flake8-bugbear
    "I",   # isort
    "ARG", # flake8-unused-arguments
    "C4",  # flake8-comprehensions
    "EM",  # flake8-errmsg
    "ICN", # flake8-import-conventions
    "G",   # flake8-logging-format
    "PGH", # pygrep-hooks
    "PIE", # flake8-pie
    "PL",  # pylint
    "PT",  # flake8-pytest-style
    "PTH", # flake8-use-pathlib
    "RET", # flake8-return
    "RUF", # Ruff-specific
    "SIM", # flake8-simplify
    "T20", # flake8-print
    "UP",  # pyupgrade
    "YTT", # flake8-2020
    "EXE", # flake8-executable
    "NPY", # NumPy specific rules
    "PD",  # pandas-vet
]
ignore = [
    "PLR09",   # Too many X
    "PLR2004", # Magic comparison
    "PGH003",  # PGH003 error
]
isort.required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["T20"]

[tool.pyrefly.errors]
index-error = false
